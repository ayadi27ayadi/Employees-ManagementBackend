{
  "swagger": "2.0",
  "info": {
    "title": "Days Off App",
    "description": "Thanks to this application , the leave management system empowers your staff on . question such as How many days of paid vacation do i have left?  Your staff can check balances ,manage and track their time off.Managers can run reports,analyze absence trends,and find solutions to staffing issues in real time."
    
  },
  
  "servers": [
    {
      "url": "http://localhost:8000/",
     "description": "Backand URL"
    }
  ],
  
  "tags": [{
    "name": "auth",
    "description": "Authorization Users"
    },
    {
      "name": "users",
      "description": "Operations about user"
    },
    {
      "name": "dayoffs",
      "description": "Everything about day off"
    }
   
    
  ],
  
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name" :"body",
            "in": "body",
            "schema": {
             "type":"object",
             "properties":{
              "email": {
                "type": "string"
              },
              "password" : {
                "type": "string"
              }
             }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
        
          },
          "404": {
            "description": "User not found !"
          },
          "401": {
            "description": "Incorrect password !"
          },
          "400": {
            "description": "error"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/auth/forgetPassword": {
      "post": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name" :"body",
            "in": "body",
            "schema": {
             "type":"object",
             "properties":{
              "email": {
                "type": "string"
              }
             }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Please check your email for reset your password!"
        
          },
          "404": {
            "description": "User not exist !"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/auth/requestResetPassword": {
      
      "patch": {
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name" :"body",
            "in": "body",
            "requestBodies": {
              "content": {
                "application/json":{
                  "password": {
                    "type": "string",
                    "example": "string"
                  },
                  "token": {
                    "type" : "object",
                    "example": "string"
                  }
              }
              }
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "password updated"
        
          },
          "404": {
            "description": "User not found!"
          },
          "500": {
            "description": "somthing went wrong!"
          }
        }
      }
    },
    "/users": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name" :"user",
            "in": "body",
            "schema": {
              "type":"object",
              "properties":{
            
                "firstName": {
                  "type": "string",
                  "example": "exemple"
                },
                "lastName": {
                  "type": "string",
                  "example": "exemple"
                },
                
                "email": {
                  "type": "string",
                  "example": "exemple@email.com"
                },
               
                "phone": {
                  "type": "string",
                  "example": "2345"
                },
                "role": {
                  "type": "string",
                  "example": "Software Engineer"
                 
                },
                "building": {
                  "type": "string",
                  "example": "Front-End"
                },
                "avatar": {
                  "type": "string",
                  "example": "12345"
                }
        
               }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created",
            "content": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
       
      },
            
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdAtBefore",
            "in": "query",
            "description": "Filter users created before this date (YYYY-MM-DD format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdAtAfter",
            "in": "query",
            "description": "Filter users created after this date (YYYY-MM-DD format)",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content":[{
              "$ref": "#/definitions/User"
            }]
           
          }
        
        }
      }
    },
    "/usersById/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content":{
              "$ref": "#/definitions/User"

            }
          }
        }
      }
    },
    "/users/disable/{id}":{
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [ 
          {
            "name": "id",
            "in": "path",
            "required": true
            
          }
        ],
        "responses": {
          "200": {
            "description": "The account is successfully disactivated"
        
          },
          "400": {
            "description": "Code is wrong !"
          },
          "403": {
            "description": "acces denieted !"
          }
         
        }
        
      }
    },
    "/users/delete/{id}":{
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
       
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user is deleted",
            "schema":{
              "$ref":"#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}":{
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "users"
        ],
        "parameters": [ 
          { 
            "name": "body", 
            "in": "body", 
            "description": "User with new property values ",
            "schema": { 
              "properties":{
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "avatar": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "building": {
                  "type": "string"
                }
        
               }
            } 
          } 
        ], 
        "responses": {
          "200": {
            "description": "Successful operation"
        
          },
          "404": {
            "description": "not found"
          }
         
        }
        
      }
    },

    "/daysOff": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "dayoffs"
        ],
        "parameters": [
          {
            "name" :"body",
            "in": "body",
            "schema": {
             
             "type":"object",
             "properties":{
              "startDay": {
                "type": "string",
                "example": "2023-01-01"
              },
              "endDay": {
                "type": "string",
                "example": "2023-10-01"
              },
              "type": {
                "type": "string",
                "example" : "Paid" 
              },
              "JustificationSick" : {
                "type": "string",
                "example" : "certificat medical"
              }
             }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "your request is succussffully added and the id of it ${newDaysOff._id} "
        
          },
          "201": {
            "description": "maximum 2 days "
        
          },
          "400": {
            "description": "error adding new Days Off"
          }
        }
      },
      
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field to sort by",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdAtBefore",
            "in": "query",
            "description": "Filter users created before this date (YYYY-MM-DD format)",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdAtAfter",
            "in": "query",
            "description": "Filter users created after this date (YYYY-MM-DD format)",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "dayoffs"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content":{
              "$ref": "#/definitions/Days"
            }
           
          },
          "404": {
            "description": "request not found !"
          }
        
        }
      }
    },
    "/daysOff/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "dayoffs"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
            
          }
        ],
      
        "responses": {
          "200": {
            "description": "successful operation",
            "content":{
              "$ref": "#/definitions/Days"
            }
           
          },
          "404": {
            "description": "request not found !"
          }
        
        }
      },
      
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "dayoffs"
        ],
        "parameters": [ 
          {
            "name": "id",
            "in": "path",
            "description": "The request that needs to updated",
            "required": true
            
          },
          { 
            "name": "body", 
            "in": "body", 
            "description": "Request with new properties",
            "schema": { 
              "properties":{
                "startDay": {
                  "type": "string",
                  "example": "2023-01-18"
                },
                "endDay": {
                  "type": "string",
                  "example": "2023-01-22"
                },
                "type": {
                  "type": "string"
                  
                }
        
               }
            } 
          } 
        ], 
        "responses": {
          "200": {
            "description": "${dayoffs.id} is succussffully updated"
        
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "err"
          }
         
        }
        
      }
    },
    "/delete/{id}":{
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "dayoffs"
        ],
        "summary": "Delete request",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "days off is succussffully deleted"
            
          },
          "400": {
            "description": "you can not remove this request!"
          },
          "404": {
            "description": "Request not found or you are disabled now!"
          },
          "500": {
            "description": "error deleting!"
          }
        }
      }
    },
    "/deleteAll":{
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "dayoffs"
        ],
        "summary": "Delete all request",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteRequest",
        "responses": {
          "200": {
            "description": " All daysOff are succussffully deleted"
            
          },
          "404": {
            "description": "Requests not found or you are disabled now!"
          },
          "401": {
            "description": "you can not remove all request!"
          },
          "500": {
            "description": "error deleting!"
          }
        }
      }
    },
    "/daysOff/decision/{id}": {
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "dayoffs"
        ],
        
        "summary": "Send decission of request",
        "description": "Send decission of request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The request that needs to answer",
            "required": true
            
          },
          {
            "name" :"body",
            "in": "body",
            "schema": {
             "type":"object",
             "properties":{
              "decisionDirector" : {
                "properties":{ 
                  "userIdDir" : {
                    "type": "string"
                  },
                  "Status": {
                    "type" : "boolean"
                  },
                  "JustificationDir" : {
                    "type" : "string"
                  }
                }
              },
              "decisionManager" : {
                "properties":{ 
                  "userIdMan" : {
                    "type": "string"
                  },
                  "Status": {
                    "type" : "boolean"
                  },
                  "JustificationMan" : {
                    "type" : "string"
                  }
                }
              }
             }
            }
          }
        ],
        
        "responses": {
          "200": {
            "description": "user with id = ${userId} ,your answer is succussffully send"
        
          },
          "503": {
            "description": "error send answer of this Days Off ${err}"
          }
        }
      }
    } 
  },

  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "required": [
        "firstName","lastName", "email", "role","building","phone"],
      "type": "object",
      "properties": {
        
        "firstName": {
          "type": "string",
          "example": "exemple"
        },
        "lastName": {
          "type": "string",
          "example": "exemple"
        },
        
        "email": {
          "type": "string",
          "format" : "email",
          "example": "exemple@email.com"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "phone": {
          "type": "string",
          "example": "2345"
        },
        "role": {
          "type": "string",
          "example": "Software Engineer",
          "enum": [
            "Director",
            "Administration Director",
            "Administration Assistant",
            "Team manager",
            "Software Engineer",
            "Super Admin"
          ]
        },
        "building": {
          "type": "string",
          "example": "Front-End",
          "enum": [
            "Front-End",
            "Back-End",
            "Full-Stack"
          ]
        },

        "avatar": {
          "type": "string",
          "example": "12345"
        },

        "isActive": {
          "type": "boolean",
          "example": "true"
        },
        "soldDays" : {
          "type" : "Number",
          "default" : "0"
        },
        "allDaysoff" : {
          "type" : "Number",
          "default" : "0"
        },
        "daysOffSick" : {
          "type" : "Number",
          "default" : "0"
        }
        
      },
      "User": {
        "type": "object",
        "$ref": "#/definitions/User"
      }
      
    },
    "Days": {
      "required": [
        "userId",
        "startDay",
        "endDay",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 10
        },
        "userId": {
          "type": "integer",
          "example": 100000
        },
        "startDay": {
          "type": "string",
          "example": "2023-01-18"
        },
        "endDay": {
          "type": "string",
          "example": "2023-01-22"
        },
        "type": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "Paid",
            "Unpaid",
            "Sick"
          ]
        },
        "decisionManager": {
          "type":"object",
          "properties":{
            "userIdMan":{
              "type": "string"},
             "status":{
              "type": "boolean"},
             "justificationMan": {
              "type": "string"} 
          }
         
        },
        "decisionDirector": {
          "type":"object",
          "properties":{
            "userIdDir":{
              "type": "string"},
             "status":{
              "type": "boolean"},
             "justificationDir": {
              "type": "string"} 
          }
         
        },
        "statusReq": {
          "type": "boolean",
          "example": "true"
        },
        "statusDecision": {
          "type": "string",
          "example": "true"
        },
        "reqDayOff": {
          "type": "Number",
          "example": "0"
        },
        "JustificationSick": {
          "type": "string",
          "example": "sick"
        }
       
      },
     
      "Days": {
        "type": "object",
        "$ref": "#/definitions/Days"
      }
     
    }
   
  } 

 
}
